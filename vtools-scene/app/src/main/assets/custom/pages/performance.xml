<?xml version="1.0" encoding="UTF-8" ?>
<actions>
    <group title="智能调度">
        <switch support="file:///android_asset/custom/switchs/qualcomm/msm_booster_support.sh">
            <title>Performance Boost Config</title>
            <desc>系统根据你启动应用或切换界面的操作，短时间内将CPU频率提高到最佳值（并且不受频率自定义频率限制），提高流畅度增加耗电</desc>
            <getstate>file:///android_asset/custom/switchs/qualcomm/msm_booster_get.sh</getstate>
            <setstate>file:///android_asset/custom/switchs/qualcomm/msm_booster_set.sh</setstate>
        </switch>
        <switch support="file:///android_asset/custom/switchs/qualcomm/msm_perfd_support.sh">
            <title>Perfd</title>
            <desc>系统根据你启动应用或切换界面的操作，短时间内将CPU频率提高到最佳值（并且不受频率自定义频率限制），提高流畅度增加耗电</desc>
            <getstate>file:///android_asset/custom/switchs/qualcomm/msm_perfd_get.sh</getstate>
            <setstate>file:///android_asset/custom/switchs/qualcomm/msm_perfd_set.sh</setstate>
        </switch>
    </group>

    <group title="dex2oat编译">
        <action>
            <title>修改dex2oat线程数</title>
            <desc>增加核心线程数（不超过CPU核心数量）可以提高应用安装效率，但会造成应用安装过程中卡顿！</desc>
            <script>file:///android_asset/custom/actions/dex2oat_threads_set.sh</script>
            <params>
                <param name="boot" title="启动时(boot-dex2oat-threads)"
                    options-sh="file:///android_asset/custom/actions/thread_count_options.sh"
                    value-sh="getprop dalvik.vm.boot-dex2oat-threads" />
                <param name="dex2oat" title="启动后(dex2oat-threads)"
                    options-sh="file:///android_asset/custom/actions/thread_count_options.sh"
                    value-sh="getprop dalvik.vm.dex2oat-threads" />
                <param name="image" title="编译启动映像(image-dex2oat-threads)"
                    options-sh="file:///android_asset/custom/actions/thread_count_options.sh"
                    value-sh="getprop dalvik.vm.image-dex2oat-threads" />
                <param name="other" title="dex2oat_thread_count" readonly="readonly">
                    <option value="">默认</option>
                </param>
            </params>
        </action>
        <action confirm="true">
            <title>优化系统应用</title>
            <desc>适用于Android N+，使用Speed模式对系统应用进行dex2oat编译。建议官改系统刷完开机后进行此操作，从而恢复流畅度！</desc>
            <script>file:///android_asset/custom/actions/sys_compile.sh</script>
        </action>
    </group>

    <group title="温控">
        <action>
            <title>硬删温控 *不推荐</title>
            <desc>用于骁龙处理器设备，删除/system和/vendor目录中，名称包含thermal的文件，这是非常危险的操作</desc>
            <params>
                <param name="action" title="操作"
                    options-sh="file:///android_asset/custom/actions/qualcomm_thermal/options.sh" />
            </params>
            <script>file:///android_asset/custom/actions/qualcomm_thermal/set.sh</script>
        </action>
    </group>

    <group title="图形渲染">
        <switch>
            <title>Force Software GLES</title>
            <desc>强制软件GLES渲染，开启此选项可能增加耗电甚至界面黑屏，如果默认开启，可尝试关闭</desc>
            <getstate>getprop persist.sys.force_sw_gles</getstate>
            <setstate>
                setprop persist.sys.force_sw_gles $state
                echo '可能需要重启才会生效'
            </setstate>
        </switch>
        <action support="file:///android_asset/custom/actions/renderer_support.sh">
            <title>HWUI渲染引擎</title>
            <desc sh="file:///android_asset/custom/actions/renderer_desc.sh" />
            <params>
                <param name="renderer"
                    options-sh="file:///android_asset/custom/actions/renderer_options.sh"
                    value-sh="file:///android_asset/custom/actions/renderer_get.sh" />
            </params>
            <script>file:///android_asset/custom/actions/renderer_set.sh</script>
        </action>
    </group>

    <group title="磁盘IO">
        <action>
            <title>执行FSTRIM</title>
            <desc>一般系统会定时执行</desc>
            <script>
                echo 'fstrim /data'
                fstrim /data
                echo 'fstrim /cache'
                fstrim /cache
                echo 'fstrim /system'
                fstrim /system
                echo '命令已执行'
            </script>
        </action>
        <action>
            <title>写入缓冲</title>
            <desc>调整写入缓冲区容量</desc>
            <params>
                <param name="dirty_background_ratio" title="写入 - 最小缓冲容量"
                    options-sh="file:///android_asset/custom/actions/io/cache_ratio_options.sh"
                    value-sh="cat /proc/sys/vm/dirty_background_ratio" />
                <param name="dirty_ratio" title="写入 - 最大缓冲容量"
                    options-sh="file:///android_asset/custom/actions/io/cache_ratio_options.sh"
                    value-sh="cat /proc/sys/vm/dirty_ratio" />
                <param name="dirty_writeback_centisecs" title="写入 - 缓存刷写频率(小于失效时间)"
                    options-sh="file:///android_asset/custom/actions/io/write_time_options.sh"
                    value-sh="cat /proc/sys/vm/dirty_writeback_centisecs" />
                <param name="dirty_expire_centisecs" title="写入 - 缓存失效时间"
                    options-sh="file:///android_asset/custom/actions/io/write_time_options.sh"
                    value-sh="cat /proc/sys/vm/dirty_expire_centisecs" />

                <param name="read_ahead_kb" title="读取 - 缓冲大小"
                    options-sh="file:///android_asset/custom/actions/io/read_cache_options.sh"
                    value-sh="cat /sys/block/sda/queue/read_ahead_kb" />
            </params>
            <script>file:///android_asset/custom/actions/io/write_cache.sh</script>
        </action>
    </group>
</actions>